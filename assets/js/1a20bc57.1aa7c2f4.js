"use strict";(self.webpackChunkscaffold_stellar=self.webpackChunkscaffold_stellar||[]).push([[114],{6768:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"cli","title":"CLI Commands","description":"Scaffold Stellar provides several CLI commands to help manage your Stellar smart contract development.","source":"@site/docs/cli.md","sourceDirName":".","slug":"/cli","permalink":"/docs/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/theahaco/scaffold-stellar/tree/main/docs/docs/docs/cli.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Quickstart","permalink":"/docs/quick-start"},"next":{"title":"Environment Configuration","permalink":"/docs/environments"}}');var t=r(4848),l=r(8453);const c={sidebar_position:3},i="CLI Commands",a={},o=[{value:"Init Command",id:"init-command",level:2},{value:"Generate Command",id:"generate-command",level:2},{value:"Upgrade Command",id:"upgrade-command",level:2},{value:"Build Command",id:"build-command",level:2},{value:"Dev Command",id:"dev-command",level:2},{value:"Update Environment Command",id:"update-environment-command",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"cli-commands",children:"CLI Commands"})}),"\n",(0,t.jsx)(n.p,{children:"Scaffold Stellar provides several CLI commands to help manage your Stellar smart contract development."}),"\n",(0,t.jsx)(n.h2,{id:"init-command",children:"Init Command"}),"\n",(0,t.jsx)(n.p,{children:"Initialize a new Scaffold Stellar project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"stellar scaffold init <project-path> [name]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"project-path"}),": Required. The path where the project will be created"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The init command creates:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A new Stellar smart contract project with best practices and configurations"}),"\n",(0,t.jsxs)(n.li,{children:["A frontend application using the ",(0,t.jsx)(n.a,{href:"https://github.com/theahaco/scaffold-stellar-frontend",children:"scaffold-stellar-frontend"})," template"]}),"\n",(0,t.jsx)(n.li,{children:"Configuration files for both contract and frontend development"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"generate-command",children:"Generate Command"}),"\n",(0,t.jsxs)(n.p,{children:["Generate a new contract from examples or wizard. Have a look at their official ",(0,t.jsx)(n.a,{href:"https://docs.openzeppelin.com/stellar-contracts",children:"documentation"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"stellar scaffold generate contract [options]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--from"}),": Clone contract from ",(0,t.jsx)(n.code,{children:"OpenZeppelin"})," examples"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--ls"}),": List available contract examples"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--from-wizard"}),": Open contract generation wizard in browser"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-o <output>"})," or ",(0,t.jsx)(n.code,{children:"--output <output>"}),": Output directory for the generated contract (defaults to ",(0,t.jsx)(n.code,{children:"contracts/<example-name>"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The generate command:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Downloads an ",(0,t.jsx)(n.code,{children:"OpenZeppelin"})," contract from ",(0,t.jsx)(n.a,{href:"https://github.com/OpenZeppelin/stellar-contracts",children:"https://github.com/OpenZeppelin/stellar-contracts"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"upgrade-command",children:"Upgrade Command"}),"\n",(0,t.jsx)(n.p,{children:"Transform an existing Soroban workspace into a full scaffold project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"stellar scaffold upgrade [workspace-path]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"workspace-path"}),": Path to existing workspace (defaults to current directory)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The upgrade command:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Validates the existing workspace (requires ",(0,t.jsx)(n.code,{children:"Cargo.toml"})," and ",(0,t.jsx)(n.code,{children:"contracts/"})," directory)"]}),"\n",(0,t.jsx)(n.li,{children:"Downloads and integrates the frontend template"}),"\n",(0,t.jsxs)(n.li,{children:["Generates ",(0,t.jsx)(n.code,{children:"environments.toml"})," with discovered contracts"]}),"\n",(0,t.jsx)(n.li,{children:"Analyzes contracts for constructor arguments and prompts for configuration"}),"\n",(0,t.jsx)(n.li,{children:"Preserves all existing contract code and project structure"}),"\n",(0,t.jsx)(n.li,{children:"Adds development tools and configurations"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Requirements for upgrade:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Must have a ",(0,t.jsx)(n.code,{children:"Cargo.toml"})," file in the workspace root"]}),"\n",(0,t.jsxs)(n.li,{children:["Must have a ",(0,t.jsx)(n.code,{children:"contracts/"})," directory with Soroban contracts"]}),"\n",(0,t.jsxs)(n.li,{children:["Contracts should be properly configured as ",(0,t.jsx)(n.code,{children:"cdylib"})," crates"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"build-command",children:"Build Command"}),"\n",(0,t.jsx)(n.p,{children:"Build contracts and generate frontend client packages:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"stellar scaffold build [options]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--build-clients"}),": Generate TypeScript client packages for contracts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--list"})," or ",(0,t.jsx)(n.code,{children:"--ls"}),": List package names in order of build"]}),"\n",(0,t.jsx)(n.li,{children:"[Standard Soroban contract build options also supported]"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"dev-command",children:"Dev Command"}),"\n",(0,t.jsx)(n.p,{children:"Start development mode with hot reloading:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"stellar scaffold watch [options]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--build-clients"}),": Generate TypeScript client packages while watching"]}),"\n",(0,t.jsx)(n.li,{children:"All options from the build command are also supported"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"update-environment-command",children:"Update Environment Command"}),"\n",(0,t.jsx)(n.p,{children:"Update environment variables in the .env file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"stellar scaffold update-env --name <var-name> [options]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--name"}),": Name of environment variable to update"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--value"}),": New value (if not provided, reads from stdin)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--env-file"}),': Path to .env file (defaults to ".env")']}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var s=r(6540);const t={},l=s.createContext(t);function c(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);